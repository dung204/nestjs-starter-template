services:
  postgres:
    container_name: postgres
    image: postgres:16-alpine
    ports:
      - '${DB_PORT:-5432}:5432'
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DB_USERNAME:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE_NAME:-postgres}
      - POSTGRES_INITDB_ARGS=--locale-provider=icu --icu-locale=vi
      - TZ=Asia/Ho_Chi_Minh
    restart: unless-stopped
    networks:
      - fu-oj-network
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready -U ${DB_USERNAME:-postgres} -d ${DB_DATABASE_NAME:-postgres} -h localhost',
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    container_name: redis
    image: redis:7.0-alpine
    command:
      - sh
      - -c
      - |
        if [ -n "${REDIS_PASSWORD}" ]; then
          redis-server --requirepass "${REDIS_PASSWORD}" --appendonly yes
        else
          redis-server --appendonly yes
        fi
    ports:
      - '${REDIS_PORT:-6379}:6379'
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - fu-oj-network
    healthcheck:
      test:
        - CMD
        - sh
        - -c
        - |
          if [ -n "${REDIS_PASSWORD}" ]; then
            redis-cli -a "${REDIS_PASSWORD}" ping
          else
            redis-cli ping
          fi
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    container_name: minio
    image: minio/minio:latest
    ports:
      - '${MINIO_PORT:-9000}:9000'
      - '${MINIO_CONSOLE_PORT:-9001}:9001'
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY:-minioadmin}
    volumes:
      - minio_data:/data
    command: server --console-address ":${MINIO_CONSOLE_PORT:-9001}" /data
    networks:
      - fu-oj-network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:${MINIO_PORT:-9000}/minio/health/live']
      interval: 30s
      timeout: 20s
      retries: 3

  createbuckets:
    container_name: createbuckets
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      /usr/bin/mc config host add myminio http://minio:${MINIO_PORT:-9000} ${MINIO_ACCESS_KEY:-minioadmin} ${MINIO_SECRET_KEY:-minioadmin};
      /usr/bin/mc mb myminio/${MINIO_BUCKET:-bucket} --ignore-existing;
      /usr/bin/mc policy set public myminio/${MINIO_BUCKET:-bucket};
      exit 0;
      "
    networks:
      - fu-oj-network

networks:
  fu-oj-network:
    driver: bridge

volumes:
  postgresql_data:
  redis_data:
  minio_data:
